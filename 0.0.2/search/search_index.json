{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#about","title":"About","text":"<p>MathLamp is a simple, powerful, math-oriented language that can run complex equations in no time.</p>"},{"location":"#install","title":"Install","text":"<p>See Installing</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Basic Arithmetic operations (+ - * / %)</li> <li>Really simple Algebra (sqrt() and pow())</li> <li>A working REPL to type expressions</li> <li>more features planned(see the Roadmap)</li> </ul>"},{"location":"#example","title":"Example","text":"<pre><code>out(1 + 1) // Prints 2\nx = 3 * 2 // Variables\ny = sqrt(4) // Square Root\nout(x / y)\n</code></pre>"},{"location":"#roadmap","title":"Roadmap","text":"<ul> <li> Add docs</li> <li> Implement Data Types (soon \ud83d\ude09)</li> <li> Add control flow</li> <li> Implement modules and packages</li> <li> Implement std (MathLamp Standard Library)</li> <li> Implement Geometry</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Here's a quick guide on MathLamp to get you started</p> <p>Warning</p> <p>MathLamp needs to be installed before following this tutorial, if you don't have Mathlamp installed see Installing.</p> <p>First open a MathLamp REPL with <code>python main.py</code>, You should see a <code>&gt;</code> in the console</p> <p>The REPL is where you can type expressions, and it will show you the result.</p>"},{"location":"getting-started/#operations","title":"Operations","text":"<p>MathLamp can evaluate operations such as: <pre><code>&gt; 1 + 1 // Outputs 2.0\n&gt; 2 - 1 // Outputs 1.0\n&gt; 3 * 2 // Outputs 6.0\n&gt; 6 / 2 // Outputs 3.0\n</code></pre></p> <p>Note</p> <p>In the code examples you may notice the two forward slashes <code>//</code>, they mean a comment, MathLamp will always ignore comments. Use them to explain your code!</p>"},{"location":"getting-started/#printing-output","title":"Printing output","text":"<p>When running a file, unlike the REPL, values will be only printed to the console if they are on an out() statement: <pre><code>// example.lmp\nout[1 + 1] // Outputs 2.0\n2 + 2 // Outputs nothing\n</code></pre></p>"},{"location":"getting-started/#variables","title":"Variables","text":"<p>You can use variables to store values: <pre><code>&gt; x = 3\n&gt; x // Outputs 3.0\n</code></pre> Or use them in operations: <pre><code>&gt; y = 5\n&gt; y + 3 // Outputs 8.0\n</code></pre></p>"},{"location":"installing/","title":"Installing","text":"<ol> <li>Clone the repo using <code>git clone https://github.com/RubberSpring/MathLamp.git</code></li> <li>Install dependencies with <code>pip install -r requirements.txt</code></li> </ol> <p>To enter the REPL run main.py with <code>python main.py</code> To run a .lmp source code file run <code>python main.py path/to/file.lmp</code></p>"},{"location":"specification/","title":"About","text":"<p>The MathLamp Language Specification (MLS for short) is hosted here. Remember to check if you are reading the correct version.</p>"}]}